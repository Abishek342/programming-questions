#include <iostream>
#include <stdio.h>
#include<vector>
#include<stdlib.h>
#include<math.h>
using namespace std;
int compare (const void * a, const void * b)    //this method used for qsort function which under stdlib.h
{
  return ( *(int*)a - *(int*)b );
}


int main() {
	// your code goes here
	string s;
	vector<int>a;
	getline(std::cin,s);  //getting input as a string
	int i=s.length()-1;
	while(i>=0){
	    int j=0,k=0;
	    while(i>=0 && s[i]!=' '){
	        int n=s[i]-'0';
	        k=k+(n*pow(10,j));
	        j++;
	        i--;
	    }                         //converting string in to  integer values
	    
	    a.push_back(k);
	
	    i--;
	}
	
	qsort(&a[0],a.size(),sizeof(int),compare);

	i=1;
	int b[2]={0,0},count=0,p[2]={0,0};    //p[1],b[1] is used to store the position and difference value where error occurs and b[0],p[0] is used to store the 
	while(i<a.size()){                                    //value and position of value this is bcz the odd value may be in first term
	    int c=a[i]-a[i-1];
	    //cout<<c<<endl;
	   
	    if(b[0]==0){  //to store first diff. value
	        b[0]=c;
	        p[0]=i;
	        
	    }
	    if(b[0]!=c){  //to store if in next or other diff value is not equal to the same
	        b[1]=c;
	        p[1]=i;
	        count++;  //this is specially if the odd value is first value
	    }
	    if(count>2){  //this is to change if the first diff value is the odd one so that we have to interchange between them 
	        b[0]=b[1]+b[0]-(b[1]=b[0]);
	        p[0]=p[1]+p[0]-(p[1]=p[0]);
	        count=0;
	        
	    }
	   i++; 
	}
    
    int m=p[1]+1;
    if(b[1]==0) //if there is no odd man
	    cout<<"-1";
	    else{
        if(p[1]!=a.size()-1 && a[m]-a[p[1]]!=b[0]){ 
            cout<<a[p[m]];
        }
    m=p[1]-1;
     if(a[p[1]]-a[m]!=b[0])
       { if(p[1]==a.size()-1)
        {
            cout<<a[p[1]]<<endl;
            goto g;
        }
	    cout<<a[p[1]-1];}
	    //if(b[1]==0)
	    //cout<<"-1";
	    }
	    g:
	return 0;
}
