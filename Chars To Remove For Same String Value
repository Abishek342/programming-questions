Chars To Remove For Same String Value

N string values S1, S2, S3, SN are passed as input to the program. Values of S1, S2, S3, SN are such that if one character is removed from each of these string values, then the resulting string values are equal (same).
The characters to be removed from the string values named C1, C2, C3, CN  will be different for each string.


Input Format:
The first line will contain the value of N.
The next N lines will contain the values of strings S1 to SN.

Boundary Conditions:
2 <= N <= 10
Length of string SN is from 2 to 200

Output Format:
The first line will contain the characters C1, C2, C3, .. CN to be removed from each of these string without any space between them.


Example Input/Output 1:

Input:
2
bmanabgerb
manasgsesr

Output:
bs

Explanation:
If the character b is removed from the first string, it becomes manager.
If the character s is removed from the second string, it becomes manager.
Hence bs is printed as output.


Example Input/Output 2:

Input:
5
abcdef
ambcde
qabcdqe
kkakbkckdke
zabczdzzze

Output:
fmqkz

sol:
#include <iostream>
#include<string>
using namespace std;

string distinct(string s){//getting distinct elements in the given string
    int arr[26]={0},top=0;
    for(int i=0;i<s.length();i++){
        if(arr[s[i]-'a']==0){
            arr[s[i]-'a']++;
        }
    }
    char dis[26];
    for(int i=0;i<26;i++){
        if(arr[i]>0){
            char d='a'+i;
            dis[top]=d;
            top++;
        }
    }
    dis[top]='\0';
    return dis;
}
string check(string dis1,string dis2){//to obtain standard string to compare with other elements
    int i=0,top=0,j=0,k=0;
    char arr[26];
    while(i<dis1.length()){
        if(dis1[i]==dis2[j]){
            arr[top]=dis1[i];
            i++;
            j++;
            top++;
            }
        else if(k==0){
            i++;
            k=1;
        }
        else if(k==1){
            i--;
            j++;
            k=0;
        }
    }
    arr[top]='\0';
    return arr;
}

int main() {
	// your code goes here
	int n,i,j,k=0;
	cin>>n;
	string s[n];
	for(i=0;i<n;i++){
	    cin>>s[i];
	}
	string dis1,dis2,req;
    dis1=distinct(s[0]);
    dis2=distinct(s[1]);
    //cout<<dis1<<endl<<dis2<<endl;
     req=check(dis1,dis2);
     //cout<<req<<endl;
     for(i=0;i<n;i++){
         k=0;
         dis1=distinct(s[i]);
         for(j=0;j<req.length();j++){
             if(req[j]!=dis1[j]){
                 cout<<dis1[j];
                 k=1;
                 break;
             }
         }
         if(k==0){
             cout<<dis1[j];
         }
     }
	return 0;
}
